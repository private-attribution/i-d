{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2024-09-22T01:15:17.246840+00:00",
  "repo": "private-attribution/i-d",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    },
    {
      "name": "prss",
      "description": "",
      "color": "FBCA04"
    },
    {
      "name": "binomial",
      "description": "",
      "color": "FBCA04"
    },
    {
      "name": "multiply",
      "description": "",
      "color": "FBCA04"
    }
  ],
  "issues": [
    {
      "number": 12,
      "id": "I_kwDOJgF-t86OmZln",
      "title": "Oops",
      "url": "https://github.com/private-attribution/i-d/issues/12",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "![image](https://github.com/private-attribution/i-d/assets/67641/6fc44568-5708-4087-b8e9-8dfbba981bcd)\r\n\r\nLook into how that might be avoided.",
      "createdAt": "2024-07-05T11:34:59Z",
      "updatedAt": "2024-07-10T04:53:25Z",
      "closedAt": "2024-07-10T04:53:25Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Fixed with thanks to Erik.",
          "createdAt": "2024-07-10T04:53:25Z",
          "updatedAt": "2024-07-10T04:53:25Z"
        }
      ]
    },
    {
      "number": 17,
      "id": "I_kwDOJgF-t86O0i7z",
      "title": "Use of 1/2 in a field is confusing",
      "url": "https://github.com/private-attribution/i-d/issues/17",
      "state": "OPEN",
      "author": "eriktaubeneck",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "multiply"
      ],
      "body": "It would probably be clearer to use $2^{-1}$, and maybe even define it, e.g., \"... subtracting the multiplicative inverse of 2, $2^{-1}$, ...\"",
      "createdAt": "2024-07-08T17:07:20Z",
      "updatedAt": "2024-07-24T21:27:45Z",
      "closedAt": null,
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Yeah, we have a note at some point in the document saying what 1/2 actually is.  I thought that was fine, but Ben and I didn't really settle on anything.\r\n\r\nIt might be worth adding to that note.",
          "createdAt": "2024-07-08T22:35:44Z",
          "updatedAt": "2024-07-08T22:35:44Z"
        }
      ]
    },
    {
      "number": 21,
      "id": "I_kwDOJgF-t86O4Tf3",
      "title": "We should quote P_i",
      "url": "https://github.com/private-attribution/i-d/issues/21",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "The text format for RFCs takes our `P<sub>+</sub>` and spits out \"P_(+)\".  This is fine, but \"P\u208a\" would be better.  All we need to do is slap a pair of \"`\" characters around each instance.",
      "createdAt": "2024-07-09T04:56:40Z",
      "updatedAt": "2024-07-09T05:00:56Z",
      "closedAt": "2024-07-09T05:00:56Z",
      "comments": []
    },
    {
      "number": 22,
      "id": "I_kwDOJgF-t86PUQFj",
      "title": "Double-check our use of Fiat-Shamir",
      "url": "https://github.com/private-attribution/i-d/issues/22",
      "state": "OPEN",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "multiply"
      ],
      "body": "The process for generating the random value, $r$, that is used at each iteration of the protocol is non-interactive.  The prover produces shares of $G(x)$ for all $x\\in{0, \\dots, 2L-1}$.  Those shares are hashed to produce $r$.\r\n\r\nFor an attacker who is seeking to hide an additive attack, the goal might be to produce values that will result in the following two equalities:\r\n\r\n$$\r\n\\sum_{i\\in\\\\{0, \\dots, L-1\\\\}}G(i) = \\sum_{i\\in\\\\{0, \\dots, L-1\\\\}}G'(i)\r\n$$\r\n\r\n$$\r\nG(r) = G'(r)\r\n$$\r\n\r\nWithin these constraints, there is a lot of flexibility, and because the prover gets to pick a set of values, test out what value of $r$ that produces, my understanding is that an attack is possible, albeit with a somewhat high cost in hashing.  Even if we model this as a second preimage attack, the inputs have higher entropy than the output and the output domain is $|p|$.  We're using $2^{61}-1$, which would be a lot of hashing to brute force, but this is not a completely implausible attack.\r\n\r\nMaybe this only points to a need for a larger prime, but I think that it would be safer if we went with an interactive protocol.\r\n\r\nThe overall latency and communication cost benefits of this Fiat-Shamir approach are not necessarily better than interactive. The verifiers used shared randomness to generate $r$ and only revealed the value once they have both received their shares of $G(x)$ (in practice this involves only the first verifier, as the second verifier uses shared randomness to receive their shares).  This adds a round of communication to each iteration, with a communication cost of one prime per iteration.  Contrast that with the current cost, which involves verifiers sending each other the output of the hash function, the communication cost is basically 1/8th.  That off a miniscule base, but it's a thing.\r\n\r\nThe real cost to an interactive protocol is the potential for added latency.   The protocol now has fewer straight line dependencies.  The prover can do all of its work without communication.  The latency only occurs between verifiers, but the second verifier has all values it needs from the outset.  The first verifier needs to wait for both the prover to provide shares and the second verifier to share its hash, but these two sources of information only have computation to do.  The second verifier needs to wait for the first verifier only.  An interactive protocol forces the prover to stop and wait.",
      "createdAt": "2024-07-12T00:54:08Z",
      "updatedAt": "2024-07-24T21:27:46Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 24,
      "id": "I_kwDOJgF-t86Qv_Yk",
      "title": "Should we invert the scaling factor (s)",
      "url": "https://github.com/private-attribution/i-d/issues/24",
      "state": "OPEN",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [
        "binomial"
      ],
      "body": "In our binomial draft, we have to divide by s.  In practice, s will be a tiny fraction of 1.  We might find it easier to invert it so that s is an integer.",
      "createdAt": "2024-07-24T21:23:18Z",
      "updatedAt": "2024-07-24T21:27:35Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 25,
      "id": "I_kwDOJgF-t86Q5Clc",
      "title": "Specify the algorithmn for finding `N` ",
      "url": "https://github.com/private-attribution/i-d/issues/25",
      "state": "OPEN",
      "author": "cjpatton",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "binom-dp [refers to an algorithm](https://private-attribution.github.io/i-d/draft-case-ppm-binomial-dp.html#section-3.2-6) for finding a number of Bernoulli trials satisfies a given $\\epsilon, \\delta$. It would be valuable to specify this algorithm, or even include a table enumerating a few good choices.",
      "createdAt": "2024-07-25T19:48:41Z",
      "updatedAt": "2024-07-25T19:49:36Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 26,
      "id": "I_kwDOJgF-t86Q5D7x",
      "title": "Align terminiology with DAP?",
      "url": "https://github.com/private-attribution/i-d/issues/26",
      "state": "OPEN",
      "author": "cjpatton",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "bionom-dp refers to \"helpers\". I understand this term to stem from the \"helper networks\" of IPA. In DAP, we've adopted the term \"Aggregator\": a \"Helper\" is a particular type of Aggregator. It might be helpful to adopt the term Aggregator, or at least disambiguate the term somewhere in the draft.",
      "createdAt": "2024-07-25T19:52:33Z",
      "updatedAt": "2024-07-25T19:52:33Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 27,
      "id": "I_kwDOJgF-t86Q5MB7",
      "title": "draft-thomson-ppm-prss-00 5.1: Why include `Npk` and `Nenc` in `LabeledExtract`?",
      "url": "https://github.com/private-attribution/i-d/issues/27",
      "state": "CLOSED",
      "author": "tgeoghegan",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "prss"
      ],
      "body": "Section 5.1 instructs implementations to include the `Npk` and `Nenc` values in the label used to extract entropy from a shared secret. These values are constant parameters of the KEM in use, whose unique ID is already in the label. So why include them? Seems like this just introduces the risk of implementations getting this wrong.\r\n",
      "createdAt": "2024-07-25T20:16:31Z",
      "updatedAt": "2024-08-08T00:05:32Z",
      "closedAt": "2024-08-08T00:05:32Z",
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "I doubt that this will result in an interoperability problem (this is stuff that you have to be careful with anyway), but I do agree that this is redundant.  Absent objections, I'll remove this.",
          "createdAt": "2024-07-27T21:16:58Z",
          "updatedAt": "2024-07-27T21:16:58Z"
        }
      ]
    },
    {
      "number": 28,
      "id": "I_kwDOJgF-t86Q5MPF",
      "title": "draft-thomson-ppm-prss-00 6.1: Could PRFs other than AES ever be supported?",
      "url": "https://github.com/private-attribution/i-d/issues/28",
      "state": "OPEN",
      "author": "tgeoghegan",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "prss"
      ],
      "body": "The document is generic over abstract descriptions of KEMs and KDFs, but then concretely requires either AES128 or 256 for the PRF. Section 6.1 cites GKWY20, which only considers AES. If someone did security proofs etc., could this method be extended to hashes (TurboSHAKE as in VDAF) or other symmetric ciphers?",
      "createdAt": "2024-07-25T20:17:06Z",
      "updatedAt": "2024-08-09T05:18:21Z",
      "closedAt": null,
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "The use of an XOF would be very interesting here.  The shape changes quite a bit, of course.\r\n\r\nMy view is that we'd want to see whether an XOF variant is faster.  If it is faster always, then we'd stop using AES.  If it is faster sometimes, that might make a case for two options, but we'd need to discuss what the costs look like.",
          "createdAt": "2024-08-09T05:18:20Z",
          "updatedAt": "2024-08-09T05:18:20Z"
        }
      ]
    },
    {
      "number": 30,
      "id": "I_kwDOJgF-t86Q5aLH",
      "title": "draft-savage-ppm-3phm-mpc-01: section names 4.4 and 4.5 repeat",
      "url": "https://github.com/private-attribution/i-d/issues/30",
      "state": "OPEN",
      "author": "tgeoghegan",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "multiply"
      ],
      "body": "Sections [4.4](https://datatracker.ietf.org/doc/html/draft-savage-ppm-3phm-mpc-01#section-4.4) and [4.5](https://datatracker.ietf.org/doc/html/draft-savage-ppm-3phm-mpc-01#section-4.5) are titled \"Distributed Zero-Knowledge Proofs\" and \"Distributed Zero Knowledge Proofs\", respectively. Perhaps they should be merged into a single heading?",
      "createdAt": "2024-07-25T20:59:29Z",
      "updatedAt": "2024-08-09T05:19:14Z",
      "closedAt": null,
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "Fixed in a recent update.",
          "createdAt": "2024-08-09T05:19:10Z",
          "updatedAt": "2024-08-09T05:19:10Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOJgF-t85QKNct",
      "title": "Some of Ben's feedback",
      "url": "https://github.com/private-attribution/i-d/pull/1",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "I'm trying out a pythonic syntax (mostly)",
      "createdAt": "2023-05-10T07:23:17Z",
      "updatedAt": "2024-04-16T00:21:12Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "95df8573e71342471c2fbe71d2f72c6b2d286357",
      "headRepository": "private-attribution/i-d",
      "headRefName": "bens-stuff",
      "headRefOid": "35d854f96ead75ed90ac6da59afb2ad7c65edf7b",
      "closedAt": "2024-04-16T00:21:12Z",
      "mergedAt": "2024-04-16T00:21:12Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "d6bffd0d86b33ed7f4c3c14735168312712a4a08"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 2,
      "id": "PR_kwDOJgF-t85QKOAB",
      "title": "Adding Ben as author",
      "url": "https://github.com/private-attribution/i-d/pull/2",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "@benjaminsavage, you might need approval for this.  Talk to Murray if you have questions about IETF participation at Meta; I have no idea what rules you need to follow.",
      "createdAt": "2023-05-10T07:25:21Z",
      "updatedAt": "2024-04-16T00:21:12Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "95df8573e71342471c2fbe71d2f72c6b2d286357",
      "headRepository": "private-attribution/i-d",
      "headRefName": "ben-author",
      "headRefOid": "6d4118f07d7c330f8ed4e11651f121aa938b1494",
      "closedAt": "2024-04-16T00:21:12Z",
      "mergedAt": "2024-04-16T00:21:12Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "d6bffd0d86b33ed7f4c3c14735168312712a4a08"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 3,
      "id": "PR_kwDOJgF-t85zTiSF",
      "title": "Limit analysis",
      "url": "https://github.com/private-attribution/i-d/pull/3",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "I spent some time with this and concluded that our limits were not good in the first time around.  A more careful analysis shows that we are still OK, but the limits are closer than ideal.  We're assuming $2^{44}$ work for the adversary here for 40 bits of security, which is probably fine, though it is much weaker than the same analysis I've seen for cipher usage elsewhere.\r\n\r\nConcrete numbers: $2^{64}$ becomes $2^{42}$ for AES-128 (double that for AES-256).",
      "createdAt": "2024-06-24T02:53:04Z",
      "updatedAt": "2024-07-05T11:44:12Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "9adcc2d9fee4d94dee6455c09e256d2ba1971464",
      "headRepository": "private-attribution/i-d",
      "headRefName": "limit-analysis",
      "headRefOid": "d367e3aef469fffb206a9ca07897de101dc956f9",
      "closedAt": "2024-07-05T11:44:11Z",
      "mergedAt": "2024-07-05T11:44:11Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "f787440bad254410fc01b7172620854b5bd61a17"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJgF-t85_Pgqs",
          "commit": {
            "abbreviatedOid": "8acb6b6"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-24T06:29:26Z",
          "updatedAt": "2024-06-24T06:29:26Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "```suggestion\r\nwilling to invoke the permutation (`q`). The result shows that statistical security is\r\n```",
              "createdAt": "2024-06-24T06:29:26Z",
              "updatedAt": "2024-06-24T06:29:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t85_Pgyg",
          "commit": {
            "abbreviatedOid": "a6c4aa3"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-24T06:29:46Z",
          "updatedAt": "2024-06-24T06:29:47Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "```suggestion\r\n| PRF_AES_256 | 0x0002 | 32 | 2<sup>43</sup> | 2<sup>128</sup> |\r\n```",
              "createdAt": "2024-06-24T06:29:46Z",
              "updatedAt": "2024-06-24T06:29:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t85_kahp",
          "commit": {
            "abbreviatedOid": "7e55ac6"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-26T01:45:36Z",
          "updatedAt": "2024-06-26T01:45:37Z",
          "comments": [
            {
              "originalPosition": 129,
              "body": "```suggestion\r\n40 bits of security; the first component is a negligible 2<sup>-169</sup>).\r\n```",
              "createdAt": "2024-06-26T01:45:37Z",
              "updatedAt": "2024-06-26T01:45:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t85_9pXi",
          "commit": {
            "abbreviatedOid": "88c7d1a"
          },
          "author": "akoshelev",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "How useful it is for us to model PRSS in the form of throughput, rather than number of invocations that is bound to 16 byte inputs? This may come down to the same question about vectorization - if we standardize it, it will become tricky to say how many invocations per input row we expect from PRSS. ",
          "createdAt": "2024-06-28T01:58:17Z",
          "updatedAt": "2024-06-28T02:11:47Z",
          "comments": [
            {
              "originalPosition": 91,
              "body": "```suggestion\r\nprovided based on the birthday bound. For instance, `q` being 2<sup>64</sup>\r\n```",
              "createdAt": "2024-06-28T01:58:17Z",
              "updatedAt": "2024-06-28T02:11:47Z"
            },
            {
              "originalPosition": 109,
              "body": "have you build a good intuition around `\u03c1` value from that paper? I read it a few times but I don't seem to understand the role of pseudo-random function in AES encryption",
              "createdAt": "2024-06-28T02:11:43Z",
              "updatedAt": "2024-06-28T02:11:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t85_-Ob7",
          "commit": {
            "abbreviatedOid": "d367e3a"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-06-28T04:37:35Z",
          "updatedAt": "2024-06-28T04:37:35Z",
          "comments": [
            {
              "originalPosition": 109,
              "body": "The way to think of AES is as a PRP (which is a narrower formulation than a PRF).  The $\\rho$ parameter is defined as the entropy of $\\mathcal{R}$.\r\n\r\n![image](https://github.com/private-attribution/i-d/assets/67641/521ac7da-15f1-42fa-8fa4-cca7541703ba)\r\n\r\nFollow this through to Theorem 4, where they look at their $\\mathrm{MMO}^\\pi$ function: \r\n\r\n$$\r\n\\mathsf{MMO}^\\pi(x) \\overset{\\mathrm{def}}{=} \\pi(x)\\oplus x\r\n$$\r\n\r\nThere, they use $\\mathcal{R}$ to mask the input, in addition to the masking from $\\pi(\\cdot)$ (i.e., AES) and say:\r\n\r\n> In the real world, the second oracle is $\\mathcal{O}^\\mathrm{cr}_R(\\cdot) = \\mathsf{MMO}^\\pi(R\\oplus\\cdot)$ (for $R$ sampled from a distribution $\\mathcal{R}$).\r\n\r\nFrom this, $\\rho$ is a limit on the entropy that can pass into the permutation.  AES has a similar limiting effect, so effectively $\\rho$ is equivalent to the entropy of AES. So $\\rho$ is, in effect, the block size of 128 bits.\r\n\r\n(Edited to correct differences between $\\rho$ and $\\pi(\\cdot)$.)",
              "createdAt": "2024-06-28T04:37:35Z",
              "updatedAt": "2024-06-28T04:53:44Z"
            }
          ]
        }
      ]
    },
    {
      "number": 4,
      "id": "PR_kwDOJgF-t850fiIC",
      "title": "Multiplication draft",
      "url": "https://github.com/private-attribution/i-d/pull/4",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "This will look like a complete mess.  But I wanted to get this out there now so that we can iterate on the details.\r\n\r\nI need to look into how we manage subscripts as a high priority item. There are a bunch of places where we should be tagging stuff as code or using pseudocode blocks, but I stopped doing the conversion for now until I sort out the subscript business.",
      "createdAt": "2024-07-05T04:16:46Z",
      "updatedAt": "2024-07-05T05:02:47Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "ded76d448d2e5e30cb875f209d31f696f99e65fc",
      "headRepository": "private-attribution/i-d",
      "headRefName": "mul",
      "headRefOid": "866c6bebfb23ad3c68f3f7acb670da29744ea9ff",
      "closedAt": "2024-07-05T05:02:47Z",
      "mergedAt": "2024-07-05T05:02:47Z",
      "mergedBy": "benjaminsavage",
      "mergeCommit": {
        "oid": "17fa96c47b4f085b5812c6d73adfe614af6a65c7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJgF-t86AvOcf",
          "commit": {
            "abbreviatedOid": "866c6be"
          },
          "author": "benjaminsavage",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Lets go!",
          "createdAt": "2024-07-05T05:02:42Z",
          "updatedAt": "2024-07-05T05:02:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 5,
      "id": "PR_kwDOJgF-t850f2TR",
      "title": "Fix sub",
      "url": "https://github.com/private-attribution/i-d/pull/5",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-05T05:28:23Z",
      "updatedAt": "2024-07-05T05:33:45Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "5a9d5c6cfc6a2c681a5775389d9d3f65beb9971d",
      "headRepository": "private-attribution/i-d",
      "headRefName": "fix-sub",
      "headRefOid": "70613d8c37faf89d8ea6dbbbd6c0840503369f23",
      "closedAt": "2024-07-05T05:33:42Z",
      "mergedAt": "2024-07-05T05:33:42Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "38b584258e18df851903acf25d7ed507bceb0e73"
      },
      "comments": [
        {
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "body": "This should work for code blocks only for now.  Next step is a bit trickier, because matching on inline code is fiddly.",
          "createdAt": "2024-07-05T05:28:58Z",
          "updatedAt": "2024-07-05T05:28:58Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 6,
      "id": "PR_kwDOJgF-t850f2jx",
      "title": "Update draft-savage-ppm-3phm-mpc.md",
      "url": "https://github.com/private-attribution/i-d/pull/6",
      "state": "MERGED",
      "author": "benjaminsavage",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I think the formula AND the diagram were incorrect",
      "createdAt": "2024-07-05T05:29:01Z",
      "updatedAt": "2024-07-05T05:32:48Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "5a9d5c6cfc6a2c681a5775389d9d3f65beb9971d",
      "headRepository": "private-attribution/i-d",
      "headRefName": "benjaminsavage-correct-multiplication-diagram",
      "headRefOid": "db8ebefc1441bcd026e5c92cdec3a00589969511",
      "closedAt": "2024-07-05T05:32:48Z",
      "mergedAt": "2024-07-05T05:32:47Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "9a43e2c9618a210ca73c2ba8238e66b125b5f3f1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJgF-t86Avetn",
          "commit": {
            "abbreviatedOid": "323cd09"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Perfect.  If we're sending left, it's funny that we compute x-*y- when the left party knows that bit already, but that's fine.",
          "createdAt": "2024-07-05T05:30:49Z",
          "updatedAt": "2024-07-05T05:30:49Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJgF-t86AvfBS",
          "commit": {
            "abbreviatedOid": "323cd09"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-05T05:31:54Z",
          "updatedAt": "2024-07-05T05:31:54Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "```suggestion\r\n     +------+------+------+\r\n```",
              "createdAt": "2024-07-05T05:31:54Z",
              "updatedAt": "2024-07-05T05:31:54Z"
            }
          ]
        }
      ]
    },
    {
      "number": 7,
      "id": "PR_kwDOJgF-t850f5kw",
      "title": "Update draft-savage-ppm-3phm-mpc.md",
      "url": "https://github.com/private-attribution/i-d/pull/7",
      "state": "MERGED",
      "author": "benjaminsavage",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Let's use the same formatting for both, and not have too much space around the multiplications\r\n\r\nThis is ugly:\r\n<img width=\"424\" alt=\"ugly\" src=\"https://github.com/private-attribution/i-d/assets/52456851/5fbffee5-c70f-486e-a3c5-21f220415484\">\r\n",
      "createdAt": "2024-07-05T05:42:37Z",
      "updatedAt": "2024-07-05T08:17:29Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "de6e60f940f0a4954837e17c78f2439af2927f79",
      "headRepository": "private-attribution/i-d",
      "headRefName": "benjaminsavage-patch-mult-algo",
      "headRefOid": "86292ea0f22152538af6d10f6ba7735faedb5b24",
      "closedAt": "2024-07-05T05:44:18Z",
      "mergedAt": "2024-07-05T05:44:18Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "af1ce5e792738fe2b37080d9f30bd23ccd78327a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJgF-t86Avhtp",
          "commit": {
            "abbreviatedOid": "0b3d1aa"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-05T05:43:32Z",
          "updatedAt": "2024-07-05T05:43:50Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n~~~ pseudocode\r\nz<sub>-</sub> = x<sub>-</sub>\u00b7y<sub>-</sub> + x<sub>-</sub>\u00b7y<sub>+</sub> + x<sub>+</sub>\u00b7y<sub>-</sub>\r\n~~~\r\n```",
              "createdAt": "2024-07-05T05:43:33Z",
              "updatedAt": "2024-07-05T05:43:50Z"
            },
            {
              "originalPosition": 16,
              "body": "```suggestion\r\n~~~ pseudocode\r\nz<sub>\\-</sub> = x<sub>\\-</sub>\u00b7y<sub>\\-</sub> + x<sub>\\-</sub>\u00b7y<sub>+</sub> + x<sub>+</sub>\u00b7y<sub>\\-</sub> + r<sub>\\-</sub> - r<sub>+</sub>\r\n~~~\r\n```",
              "createdAt": "2024-07-05T05:43:45Z",
              "updatedAt": "2024-07-05T05:43:50Z"
            }
          ]
        }
      ]
    },
    {
      "number": 8,
      "id": "PR_kwDOJgF-t850f7NZ",
      "title": "Update draft-savage-ppm-3phm-mpc.md",
      "url": "https://github.com/private-attribution/i-d/pull/8",
      "state": "MERGED",
      "author": "benjaminsavage",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Looks like this now:\r\n![Uploading too much space.png\u2026]()\r\n",
      "createdAt": "2024-07-05T05:50:06Z",
      "updatedAt": "2024-07-05T05:52:51Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "e804ac6c6c2c4f251d52adef2e11a74107e70607",
      "headRepository": "private-attribution/i-d",
      "headRefName": "benjaminsavage-patch-1",
      "headRefOid": "2e1122958fc8b2fc9578846ac92d16b789d9e484",
      "closedAt": "2024-07-05T05:52:51Z",
      "mergedAt": "2024-07-05T05:52:50Z",
      "mergedBy": "benjaminsavage",
      "mergeCommit": {
        "oid": "52609f4e4eac571d591f54cca9943dcfe100a2df"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJgF-t86Avj4q",
          "commit": {
            "abbreviatedOid": "2e11229"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-05T05:51:51Z",
          "updatedAt": "2024-07-05T05:51:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDOJgF-t850f9hF",
      "title": "Update draft-savage-ppm-3phm-mpc.md",
      "url": "https://github.com/private-attribution/i-d/pull/9",
      "state": "MERGED",
      "author": "benjaminsavage",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Like this?",
      "createdAt": "2024-07-05T05:58:26Z",
      "updatedAt": "2024-07-05T06:09:12Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "52609f4e4eac571d591f54cca9943dcfe100a2df",
      "headRepository": "private-attribution/i-d",
      "headRefName": "benjaminsavage-patch-2",
      "headRefOid": "8e554d6ae26a37afd01cd0da8139f78635780b6a",
      "closedAt": "2024-07-05T06:09:09Z",
      "mergedAt": "2024-07-05T06:09:09Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "60c0e26282d53f2503087cf94aaa6294a55bb3da"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJgF-t86AvprJ",
          "commit": {
            "abbreviatedOid": "8e554d6"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-05T06:09:05Z",
          "updatedAt": "2024-07-05T06:09:05Z",
          "comments": []
        }
      ]
    },
    {
      "number": 10,
      "id": "PR_kwDOJgF-t850hn8_",
      "title": "Update draft-savage-ppm-3phm-mpc.md",
      "url": "https://github.com/private-attribution/i-d/pull/10",
      "state": "MERGED",
      "author": "benjaminsavage",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Is this accurate?",
      "createdAt": "2024-07-05T10:52:45Z",
      "updatedAt": "2024-07-05T11:44:00Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "3b653da64333cb4abdbdc18204425aa4be387dd4",
      "headRepository": "private-attribution/i-d",
      "headRefName": "benjaminsavage-patch-2",
      "headRefOid": "24c3a26bb9910023059e191bdf3b18af21f57c08",
      "closedAt": "2024-07-05T11:43:56Z",
      "mergedAt": "2024-07-05T11:43:56Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "415433c25814d9d8be80983a0946753563a372b9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJgF-t86Ax3ZB",
          "commit": {
            "abbreviatedOid": "24c3a26"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-05T11:43:51Z",
          "updatedAt": "2024-07-05T11:43:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 11,
      "id": "PR_kwDOJgF-t850h0Mf",
      "title": "Remove some of the intermediate steps",
      "url": "https://github.com/private-attribution/i-d/pull/11",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "I think that we can skip this step.  It's a bit messy.",
      "createdAt": "2024-07-05T11:29:17Z",
      "updatedAt": "2024-07-05T11:30:33Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "2566801ef2fa8e6f3eaba33b54cc0b9d7b30c4d1",
      "headRepository": "private-attribution/i-d",
      "headRefName": "no-distrib",
      "headRefOid": "32327f3077feec8493fdaf109e67415ea67b04e2",
      "closedAt": "2024-07-05T11:30:32Z",
      "mergedAt": "2024-07-05T11:30:32Z",
      "mergedBy": "benjaminsavage",
      "mergeCommit": {
        "oid": "abc007271e42b3e77363c378ad71738eef138776"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJgF-t86AxyUr",
          "commit": {
            "abbreviatedOid": "32327f3"
          },
          "author": "benjaminsavage",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-05T11:30:25Z",
          "updatedAt": "2024-07-05T11:30:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 13,
      "id": "PR_kwDOJgF-t850ppUp",
      "title": "Add DP draft",
      "url": "https://github.com/private-attribution/i-d/pull/13",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-08T06:53:28Z",
      "updatedAt": "2024-07-08T21:02:59Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "5d0bc05112d980b7a52bd7acc7e37c7eee6b4627",
      "headRepository": "private-attribution/i-d",
      "headRefName": "dp",
      "headRefOid": "e639afbc4aca51717985d017046a9fd63aaf26c1",
      "closedAt": "2024-07-08T21:02:57Z",
      "mergedAt": "2024-07-08T21:02:57Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "256af0205422409ddca7fc4d13046dd1186b430d"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 14,
      "id": "PR_kwDOJgF-t850uCPi",
      "title": "arrange parties clockwise",
      "url": "https://github.com/private-attribution/i-d/pull/14",
      "state": "MERGED",
      "author": "eriktaubeneck",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "this is only a suggestion, but it felt strange to have a circular representation of numbers in anti-clockwise order.\r\n\r\n\r\n~~~ aasvg\r\n        x\u2081  .----.  x\u2082\r\n       .---|  P\u2081  |---.\r\n      /     `----'     \\\r\n x\u2081  /                  \\  x\u2082\r\n .----.                .----.\r\n|  P\u2083  |--------------|  P\u2082  |\r\n `----'  x\u2083        x\u2083  `----'\r\n~~~\r\n\r\n~~~ aasvg\r\nsend                               send\r\nleft:       .----.                 right:      .----.\r\n       .---|  P\u2081  |<--.                   .-->|  P\u2081  |---.\r\n      /     `----'     \\                 /     `----'     \\\r\n     v                  \\               /                  v\r\n .----.                .----.       .----.                .----.\r\n|  P\u2083  |------------->|  P\u2082  |     |  P\u2083  |<-------------|  P\u2082  |\r\n `----'                `----'       `----'                `----'\r\n~~~\r\n\r\n",
      "createdAt": "2024-07-08T16:35:19Z",
      "updatedAt": "2024-07-08T21:47:00Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "3279073edd12ec4f15e5c65ba57f2f2001705518",
      "headRepository": "private-attribution/i-d",
      "headRefName": "eriktaubeneck-clockwise",
      "headRefOid": "bc8e044f98806d130696b78348ce041a4f01dff3",
      "closedAt": "2024-07-08T21:46:59Z",
      "mergedAt": "2024-07-08T21:46:59Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "f38ab2c25179e189cbaf4a976c1e5b8973c1dd88"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJgF-t86A_YkA",
          "commit": {
            "abbreviatedOid": "92541df"
          },
          "author": "benjaminsavage",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T18:43:55Z",
          "updatedAt": "2024-07-08T18:43:56Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "Unfortunately, from the perspective of each helper in this picture, the directions no longer match the names.\r\n\r\nLooking at these arrows, in the figure on the left (which is labeled as \"send left\"), P_3 is clearly sending a value to it's \"right\".",
              "createdAt": "2024-07-08T18:43:56Z",
              "updatedAt": "2024-07-08T18:43:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t86A_biE",
          "commit": {
            "abbreviatedOid": "92541df"
          },
          "author": "eriktaubeneck",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T18:50:08Z",
          "updatedAt": "2024-07-08T18:50:09Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "Yes, but the other way around, P_1 and P_2 send values in the \"wrong\" direction. With a circle, you'll always have some going the \"wrong\" way. \r\n\r\nThis change makes \"send left\" align with counter-clockwise and \"send right\" align with clockwise, and has the advantage that P_1 at the top is sending in the \"correct\" direction, as well as 2 out of 3 sending in the correct direction (instead of 1 out of 3).",
              "createdAt": "2024-07-08T18:50:09Z",
              "updatedAt": "2024-07-08T18:51:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t86BARWR",
          "commit": {
            "abbreviatedOid": "92541df"
          },
          "author": "eriktaubeneck",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T20:21:39Z",
          "updatedAt": "2024-07-08T20:21:39Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "Oh, I think I see what you're saying now. If you picture this as 3 people looking inward, then the original makes sense. That's not at all how I visualized it; I see it more like a clock, and it feels way more natural to think of left as counter clockwise and right as clockwise (righty-tighty, lefty-loosey...)\r\n\r\nHere's an alternative:\r\n```\r\n~~~ aasvg\r\nsend\r\nleft:      .----.      .----.      .----.\r\n        .-+  P\u2081  |<---+  P\u2082  |<---+  P\u2083  |<--.\r\n         \\ `----'      `----'      `----'   /\r\n          '--------------------------------'\r\n\r\nsend\r\nright:     .----.      .----.      .----.\r\n      .-->|  P\u2081  +--->+  P\u2082  +--->|  P\u2083  +-.\r\n       \\   `----'      `----'      `----' /\r\n        '--------------------------------'\r\n~~~\r\n```\r\nwhich renders as:\r\n<img width=\"429\" alt=\"image\" src=\"https://github.com/private-attribution/i-d/assets/982499/1b240641-ae9c-4c6f-b97a-ca81137e3000\">\r\n\r\n\r\nThe down side to this approach is that making the top diagram consistent is a clearly not as nice looking:\r\n<img width=\"395\" alt=\"image\" src=\"https://github.com/private-attribution/i-d/assets/982499/13148640-425d-46ca-a222-2879296ec9de\">\r\n",
              "createdAt": "2024-07-08T20:21:39Z",
              "updatedAt": "2024-07-08T20:21:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t86BA4cq",
          "commit": {
            "abbreviatedOid": "0f2b4b2"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T21:42:46Z",
          "updatedAt": "2024-07-08T21:42:47Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "```suggestion\r\n       .--+  P\u2081  |<---+  P\u2082  |<---+  P\u2083  |<--.\r\n        \\  `----'      `----'      `----'   /\r\n         '---------------------------------'\r\n```",
              "createdAt": "2024-07-08T21:42:46Z",
              "updatedAt": "2024-07-08T21:42:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t86BA41b",
          "commit": {
            "abbreviatedOid": "3a957b1"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T21:44:03Z",
          "updatedAt": "2024-07-08T21:44:04Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "```suggestion\r\n      .-->|  P\u2081  +--->+  P\u2082  +--->|  P\u2083  +--.\r\n       \\   `----'      `----'      `----'  /\r\n        '---------------------------------'\r\n```",
              "createdAt": "2024-07-08T21:44:03Z",
              "updatedAt": "2024-07-08T21:44:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t86BA5R5",
          "commit": {
            "abbreviatedOid": "e90e1b6"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T21:45:37Z",
          "updatedAt": "2024-07-08T21:45:37Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n     x\u2081 .----. x\u2082  x\u2082 .----.  x\u2083  x\u2083 .----. x\u2081\r\n```",
              "createdAt": "2024-07-08T21:45:37Z",
              "updatedAt": "2024-07-08T21:45:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t86BA5rV",
          "commit": {
            "abbreviatedOid": "bc8e044"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-08T21:46:48Z",
          "updatedAt": "2024-07-08T21:46:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 15,
      "id": "PR_kwDOJgF-t850uFJm",
      "title": "Update draft-savage-ppm-3phm-mpc.md",
      "url": "https://github.com/private-attribution/i-d/pull/15",
      "state": "MERGED",
      "author": "eriktaubeneck",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "small change to add clarity. the change is only on 367 (the rest is simply to keep the width consistent.)",
      "createdAt": "2024-07-08T16:43:58Z",
      "updatedAt": "2024-07-08T18:41:27Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "3279073edd12ec4f15e5c65ba57f2f2001705518",
      "headRepository": "private-attribution/i-d",
      "headRefName": "eriktaubeneck-clarification",
      "headRefOid": "848a98e900122a77308ed2b04f1424455f67a0c8",
      "closedAt": "2024-07-08T18:41:25Z",
      "mergedAt": "2024-07-08T18:41:25Z",
      "mergedBy": "benjaminsavage",
      "mergeCommit": {
        "oid": "8c5fb1e9c03e04cc2db80f54abb3a0efc9ab00fd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJgF-t86A_Xgr",
          "commit": {
            "abbreviatedOid": "848a98e"
          },
          "author": "benjaminsavage",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "Thank you. This is better. Every time I read that section it bothered me, but I wasn't exactly sure how to improve it. This is better than what I had.",
          "createdAt": "2024-07-08T18:41:20Z",
          "updatedAt": "2024-07-08T18:41:20Z",
          "comments": []
        }
      ]
    },
    {
      "number": 16,
      "id": "PR_kwDOJgF-t850uIJA",
      "title": "remove quotes around semi-honest security",
      "url": "https://github.com/private-attribution/i-d/pull/16",
      "state": "MERGED",
      "author": "eriktaubeneck",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "This is the only place the term \"semi-honest security\" is used in the document. Quotes aren't necessary unless quoting from elsewhere (in the doc or in another), or defining a term.",
      "createdAt": "2024-07-08T16:52:02Z",
      "updatedAt": "2024-07-08T21:50:56Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "3279073edd12ec4f15e5c65ba57f2f2001705518",
      "headRepository": "private-attribution/i-d",
      "headRefName": "eriktaubeneck-patch-2",
      "headRefOid": "20a61646f745722868acc3e41afb7b0adfab3251",
      "closedAt": "2024-07-08T21:50:55Z",
      "mergedAt": "2024-07-08T21:50:55Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "af37f3b975320f0dd5047643e19852cbfafb964f"
      },
      "comments": [
        {
          "author": "eriktaubeneck",
          "authorAssociation": "MEMBER",
          "body": "It probably makes sense to remove them from \"secure up to an additive attack\" in the next sentence too, unless that is a quote from a paper (in which case, we should add a citation.)",
          "createdAt": "2024-07-08T16:53:00Z",
          "updatedAt": "2024-07-08T16:53:00Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJgF-t86A_W02",
          "commit": {
            "abbreviatedOid": "18d34c6"
          },
          "author": "benjaminsavage",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T18:40:03Z",
          "updatedAt": "2024-07-08T18:40:04Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "@martinthomson had a comment in the original Google doc saying that we should probably define the things in scare quotes up in the definitions section... But I felt like these terms were already defined in the text immediately following the introduction of these terms. @martinthomson - what do you think we should do? Should we add definitions for these things or is the current text OK?",
              "createdAt": "2024-07-08T18:40:04Z",
              "updatedAt": "2024-07-08T18:40:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t86BA6OU",
          "commit": {
            "abbreviatedOid": "18d34c6"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T21:48:17Z",
          "updatedAt": "2024-07-08T21:48:18Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nsecurity. It is secure up to an additive attack; see {{additive-attack}}. Validating multiplications\r\n```",
              "createdAt": "2024-07-08T21:48:18Z",
              "updatedAt": "2024-07-08T21:48:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t86BA6Sx",
          "commit": {
            "abbreviatedOid": "20a6164"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-08T21:48:32Z",
          "updatedAt": "2024-07-08T21:48:32Z",
          "comments": []
        }
      ]
    },
    {
      "number": 18,
      "id": "PR_kwDOJgF-t850uQXn",
      "title": "add clarification on left and right verifier",
      "url": "https://github.com/private-attribution/i-d/pull/18",
      "state": "MERGED",
      "author": "eriktaubeneck",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "this makes consistent the use of \"left verifier\" and \"right verifier\".",
      "createdAt": "2024-07-08T17:10:57Z",
      "updatedAt": "2024-07-08T18:38:27Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "3279073edd12ec4f15e5c65ba57f2f2001705518",
      "headRepository": "private-attribution/i-d",
      "headRefName": "eriktaubeneck-clarification2",
      "headRefOid": "029ced30493decbb791c86215298ec97bfa510b3",
      "closedAt": "2024-07-08T18:38:26Z",
      "mergedAt": "2024-07-08T18:38:26Z",
      "mergedBy": "benjaminsavage",
      "mergeCommit": {
        "oid": "4c1841d3e5f9d742eed89f7d300b73422caa2de9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJgF-t86A_WHV",
          "commit": {
            "abbreviatedOid": "029ced3"
          },
          "author": "benjaminsavage",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-08T18:38:20Z",
          "updatedAt": "2024-07-08T18:38:20Z",
          "comments": []
        }
      ]
    },
    {
      "number": 19,
      "id": "PR_kwDOJgF-t850ulhz",
      "title": "clarification on hashing commitment",
      "url": "https://github.com/private-attribution/i-d/pull/19",
      "state": "MERGED",
      "author": "eriktaubeneck",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "on first read, this seemed to suggest the verifiers could independently compute half a hash function, which didn't make sense. this attempts to make it clearer that there are 3 different hashing happening (in line with the pseudocode.)",
      "createdAt": "2024-07-08T18:07:52Z",
      "updatedAt": "2024-07-08T21:50:37Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "3279073edd12ec4f15e5c65ba57f2f2001705518",
      "headRepository": "private-attribution/i-d",
      "headRefName": "eriktaubeneck-clarification-hasing",
      "headRefOid": "90128cebe4b7a4db48dc8a312cb45180efcffb95",
      "closedAt": "2024-07-08T21:50:36Z",
      "mergedAt": "2024-07-08T21:50:36Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "327a7a8539d6e27690f83d1f730ea5eec5adf038"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJgF-t86A_VLg",
          "commit": {
            "abbreviatedOid": "82f48ea"
          },
          "author": "benjaminsavage",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T18:36:22Z",
          "updatedAt": "2024-07-08T18:36:22Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Thanks for improving this! The last bit about \"compute commitment hash value\" is still confusing to me. How about this: \"...after which they can concatenate the two hash values and then hash that a final time to generate the challenge point `r`.",
              "createdAt": "2024-07-08T18:36:22Z",
              "updatedAt": "2024-07-08T18:36:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t86A_ecS",
          "commit": {
            "abbreviatedOid": "82f48ea"
          },
          "author": "eriktaubeneck",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T18:55:04Z",
          "updatedAt": "2024-07-08T18:55:04Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "yea, I stuggled with the end of this too. I used \"commitment\" since it's used the the pseudo code. The final hash isn't exactly the challenge point, so maybe:\r\n\r\n> ... after which they can concatenate the two hash values, hash the concatenation, and proceed with computing the challenge point `r`.",
              "createdAt": "2024-07-08T18:55:04Z",
              "updatedAt": "2024-07-08T18:55:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t86BA6hP",
          "commit": {
            "abbreviatedOid": "82f48ea"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-08T21:49:22Z",
          "updatedAt": "2024-07-08T21:50:07Z",
          "comments": [
            {
              "originalPosition": 2,
              "body": "```suggestion\r\nThe verifiers generate the same point `r` independently. Each verifier only has\r\n```",
              "createdAt": "2024-07-08T21:49:22Z",
              "updatedAt": "2024-07-08T21:50:07Z"
            },
            {
              "originalPosition": 7,
              "body": "Yeah, this is better, but I'm going with:\r\n\r\n```suggestion\r\nthe two hash values and compute the challenge point.\r\n```",
              "createdAt": "2024-07-08T21:49:57Z",
              "updatedAt": "2024-07-08T21:50:07Z"
            }
          ]
        }
      ]
    },
    {
      "number": 20,
      "id": "PR_kwDOJgF-t850upU0",
      "title": "typos",
      "url": "https://github.com/private-attribution/i-d/pull/20",
      "state": "MERGED",
      "author": "eriktaubeneck",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "just a few typos",
      "createdAt": "2024-07-08T18:17:19Z",
      "updatedAt": "2024-07-08T21:59:59Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "69f4359784a06b45fe7905a5302b76d3321f629f",
      "headRepository": "private-attribution/i-d",
      "headRefName": "eriktaubeneck-patch-1",
      "headRefOid": "daf2fb5b34fcda3822efa0e62169040a50f6646a",
      "closedAt": "2024-07-08T21:59:58Z",
      "mergedAt": "2024-07-08T21:59:58Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "5ea6c75b59fabdb29db81b03b97d6faf7e8509fb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJgF-t86A_Ttp",
          "commit": {
            "abbreviatedOid": "e9f5158"
          },
          "author": "benjaminsavage",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T18:33:08Z",
          "updatedAt": "2024-07-08T18:33:08Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "The reason I did this is because @martinthomson's converter was converting this into:\r\n```\r\nlagrange<sub>interpolate</sub>\r\n```\r\ndue to the use of a really simplistic regular expression =). My \"solution\" here does not render nicely either though...",
              "createdAt": "2024-07-08T18:33:08Z",
              "updatedAt": "2024-07-08T18:33:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t86A_T7l",
          "commit": {
            "abbreviatedOid": "e9f5158"
          },
          "author": "benjaminsavage",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "Thanks for fixing these @eriktaubeneck. I would merge it if it weren't for that final one with `lagrange_interpolate`. If you can revert those lines I'll merge it.",
          "createdAt": "2024-07-08T18:33:42Z",
          "updatedAt": "2024-07-08T18:33:42Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJgF-t86A_fU_",
          "commit": {
            "abbreviatedOid": "e9f5158"
          },
          "author": "eriktaubeneck",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T18:56:54Z",
          "updatedAt": "2024-07-08T18:56:55Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "ahh got it. maybe camel case? `lagrangeInterpolate(...`?",
              "createdAt": "2024-07-08T18:56:55Z",
              "updatedAt": "2024-07-08T18:56:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t86A_gGZ",
          "commit": {
            "abbreviatedOid": "e9f5158"
          },
          "author": "eriktaubeneck",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T18:58:22Z",
          "updatedAt": "2024-07-08T18:58:22Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "why doesn't `total_count` above get converted?",
              "createdAt": "2024-07-08T18:58:22Z",
              "updatedAt": "2024-07-08T18:58:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t86A_zpk",
          "commit": {
            "abbreviatedOid": "e9f5158"
          },
          "author": "eriktaubeneck",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T19:30:33Z",
          "updatedAt": "2024-07-08T19:30:33Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "> why doesn't `total_count` above get converted?\r\n\r\nahh so two reasons. once because it's in `python` and not `pseudocode`, however that doesn't work here because we want `t_-` and `t_+` to get converted correctly. the second time because only `chars = \"-+=()0123456789im\"` are used, and `i` makes sense since it's often used as an index, so we can't remove it.\r\n\r\nI reverted this, but then also added a small change to @martinthomson's converter to swap out `\\_` with `_` after the conversions have been found.",
              "createdAt": "2024-07-08T19:30:33Z",
              "updatedAt": "2024-07-08T19:30:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t86BA798",
          "commit": {
            "abbreviatedOid": "e9f5158"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T21:54:10Z",
          "updatedAt": "2024-07-08T21:54:10Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "@eriktaubeneck made the same change that I did :)  The underscore here is what I went with also.",
              "createdAt": "2024-07-08T21:54:10Z",
              "updatedAt": "2024-07-08T21:54:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t86BA8Nz",
          "commit": {
            "abbreviatedOid": "e9f5158"
          },
          "author": "eriktaubeneck",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-08T21:55:01Z",
          "updatedAt": "2024-07-08T21:55:01Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "@martinthomson great minds!",
              "createdAt": "2024-07-08T21:55:01Z",
              "updatedAt": "2024-07-08T21:55:01Z"
            }
          ]
        }
      ]
    },
    {
      "number": 23,
      "id": "PR_kwDOJgF-t852YY7k",
      "title": "nit: \"increase\" -> \"decrease\"",
      "url": "https://github.com/private-attribution/i-d/pull/23",
      "state": "MERGED",
      "author": "cjpatton",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-07-24T19:29:20Z",
      "updatedAt": "2024-07-31T03:10:03Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "bb7e0405e62d6dc5c3a6fbaae6e743d2882378db",
      "headRepository": "cjpatton/i-d",
      "headRefName": "binom-dp/nits/1",
      "headRefOid": "c3c6aa07c4b540a2a36fd9be0c8a8c2f48cce2e9",
      "closedAt": "2024-07-31T03:10:03Z",
      "mergedAt": "2024-07-31T03:10:03Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "58c298f63f1f9f92fd204e6f751fe0e46ce90a99"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJgF-t86DUmiM",
          "commit": {
            "abbreviatedOid": "1e1a18f"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "COMMENTED",
          "body": "I think that the original text is correct, though the reference point is unclear.",
          "createdAt": "2024-07-27T17:47:46Z",
          "updatedAt": "2024-07-27T17:47:51Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n50% increase in the amount of noise relative to the ideal.\r\n```",
              "createdAt": "2024-07-27T17:47:46Z",
              "updatedAt": "2024-07-27T17:47:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t86Dq5Zr",
          "commit": {
            "abbreviatedOid": "c3c6aa0"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-31T03:09:55Z",
          "updatedAt": "2024-07-31T03:09:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 29,
      "id": "PR_kwDOJgF-t852gt6l",
      "title": "draft-thomson-ppm-prss.md: typos",
      "url": "https://github.com/private-attribution/i-d/pull/29",
      "state": "MERGED",
      "author": "tgeoghegan",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "I believe these are all typos in the draft but I'm happy to be wrong.",
      "createdAt": "2024-07-25T20:18:12Z",
      "updatedAt": "2024-08-06T06:07:00Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "e7d0047c4e301d8a36046f37bb1def9cc74a4d95",
      "headRepository": "tgeoghegan/i-d",
      "headRefName": "patch-1",
      "headRefOid": "82ebdc5cf114c81b674b2247b29fbada80a09674",
      "closedAt": "2024-08-06T06:07:00Z",
      "mergedAt": "2024-08-06T06:07:00Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "bcba83cb4fc691c10efb9197aca768145239a92c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJgF-t86DJx-P",
          "commit": {
            "abbreviatedOid": "0ed614c"
          },
          "author": "tgeoghegan",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-07-25T20:18:48Z",
          "updatedAt": "2024-07-25T20:19:36Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "`ss` seems to better match the identifier used in the pseudo-Python on L192-193 and the line on L196.",
              "createdAt": "2024-07-25T20:18:48Z",
              "updatedAt": "2024-07-25T20:19:36Z"
            },
            {
              "originalPosition": 14,
              "body": "I suspect this was copy-pasted from the previous section discussing KEMs. KDFs are more relevant here right?",
              "createdAt": "2024-07-25T20:19:24Z",
              "updatedAt": "2024-07-25T20:19:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJgF-t86DUrLY",
          "commit": {
            "abbreviatedOid": "0ed614c"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "Thanks Tim, these are helpful.",
          "createdAt": "2024-07-27T21:18:39Z",
          "updatedAt": "2024-07-27T21:18:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 31,
      "id": "PR_kwDOJgF-t853LZsi",
      "title": "Editorial fixes",
      "url": "https://github.com/private-attribution/i-d/pull/31",
      "state": "MERGED",
      "author": "divergentdave",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This makes a few editorial fixes across the three drafts for issues I noticed on my first read-through.",
      "createdAt": "2024-08-01T21:33:03Z",
      "updatedAt": "2024-08-01T22:42:50Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "58c298f63f1f9f92fd204e6f751fe0e46ce90a99",
      "headRepository": "divergentdave/i-d",
      "headRefName": "editorial",
      "headRefOid": "7ec36a266de10a8946a77f8004f5cc535141a80c",
      "closedAt": "2024-08-01T22:42:50Z",
      "mergedAt": "2024-08-01T22:42:50Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "e6158e6bda338317e0fa2758a3e50b01f6c8036e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJgF-t86D-WYN",
          "commit": {
            "abbreviatedOid": "7ec36a2"
          },
          "author": "martinthomson",
          "authorAssociation": "MEMBER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-01T22:42:29Z",
          "updatedAt": "2024-08-01T22:42:29Z",
          "comments": []
        }
      ]
    },
    {
      "number": 32,
      "id": "PR_kwDOJgF-t853hnD3",
      "title": "Remove nx extract",
      "url": "https://github.com/private-attribution/i-d/pull/32",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "MEMBER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-08-06T06:05:43Z",
      "updatedAt": "2024-08-08T00:05:33Z",
      "baseRepository": "private-attribution/i-d",
      "baseRefName": "main",
      "baseRefOid": "e7d0047c4e301d8a36046f37bb1def9cc74a4d95",
      "headRepository": "private-attribution/i-d",
      "headRefName": "remove-nx-extract",
      "headRefOid": "aee3a98e8d5615611b445c400060bee7b1f9e1d1",
      "closedAt": "2024-08-08T00:05:31Z",
      "mergedAt": "2024-08-08T00:05:31Z",
      "mergedBy": "martinthomson",
      "mergeCommit": {
        "oid": "dac5ad66a1b3765d7d63f996de5bf692d6d8deac"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJgF-t86Ej2-n",
          "commit": {
            "abbreviatedOid": "aee3a98"
          },
          "author": "benjaminsavage",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-08-07T10:22:09Z",
          "updatedAt": "2024-08-07T10:22:09Z",
          "comments": []
        }
      ]
    }
  ]
}